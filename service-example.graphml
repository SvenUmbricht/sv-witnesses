<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://graphml.graphdrawing.org/xmlns">
<key attr.name="nodeType" attr.type="string" for="node" id="nodetype">
<default>path</default>
</key>
<key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
<default>/scratch/dangl/sv-benchmarks/c/product-lines/minepump_spec1_product33_false-unreach-call.cil.c</default>
</key>
<key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier">
<default>false</default>
</key>
<key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
<default>false</default>
</key>
<key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
<default>false</default>
</key>
<key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
<default>false</default>
</key>
<key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
<key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
<key attr.name="namedValue" attr.type="string" for="node" id="named"/>
<key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
<key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
<key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
<key attr.name="specification" attr.type="string" for="graph" id="specification"/>
<key attr.name="memoryModel" attr.type="string" for="graph" id="memorymodel"/>
<key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
<key attr.name="producer" attr.type="string" for="graph" id="producer"/>
<key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
<key attr.name="startline" attr.type="int" for="edge" id="startline"/>
<key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
<key attr.name="lineColSet" attr.type="string" for="edge" id="lineCols"/>
<key attr.name="control" attr.type="string" for="edge" id="control"/>
<key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
<key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
<key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
<key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
<key attr.name="predecessor" attr.type="string" for="edge" id="predecessor"/>
<key attr.name="successor" attr.type="string" for="edge" id="successor"/>
<key attr.name="graphtype" attr.type="string" for="graph" id="type"/>
<graph edgedefault="directed">
<data key="type">traces automaton</data>
<data key="sourcecodelang">C</data>
<data key="producer">CPAchecker 1.4-svn</data>
<data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
<data key="programfile">/scratch/dangl/sv-benchmarks/c/product-lines/minepump_spec1_product33_false-unreach-call.cil.c</data>
<data key="memorymodel">precise</data>
<data key="architecture">32bit</data>
<node id="A0">
<data key="entry">true</data>
</node>
<node id="A34"/>
<edge source="A0" target="A34">
<data key="sourcecode">static struct __ACC__ERR *head  =    (struct __ACC__ERR *)0;</data>
<data key="startline">209</data>
<data key="startoffset">6207</data>
</edge>
<node id="A60"/>
<edge source="A34" target="A60">
<data key="sourcecode">int pumpRunning  =    0;</data>
<data key="startline">424</data>
<data key="startoffset">11077</data>
<data key="assumption">pumpRunning == (0)</data>
</edge>
<node id="A62"/>
<edge source="A60" target="A62">
<data key="sourcecode">int systemActive  =    1;</data>
<data key="startline">425</data>
<data key="startoffset">11125</data>
<data key="assumption">systemActive == (1)</data>
</edge>
<node id="A90"/>
<edge source="A62" target="A90">
<data key="sourcecode">int cleanupTimeShifts  =    4;</data>
<data key="startline">683</data>
<data key="startoffset">14452</data>
<data key="assumption">cleanupTimeShifts == (4)</data>
</edge>
<node id="A102"/>
<edge source="A90" target="A102">
<data key="sourcecode">int waterLevel  =    1;</data>
<data key="startline">806</data>
<data key="startoffset">15881</data>
<data key="assumption">waterLevel == (1)</data>
</edge>
<node id="A104"/>
<edge source="A102" target="A104">
<data key="sourcecode">int methaneLevelCritical  =    0;</data>
<data key="startline">807</data>
<data key="startoffset">15905</data>
<data key="assumption">methaneLevelCritical == (0)</data>
</edge>
<node id="A108"/>
<edge source="A104" target="A108">
<data key="sourcecode">int retValue_acc ;</data>
<data key="startline">756</data>
<data key="startoffset">15231</data>
</edge>
<node id="A110"/>
<edge source="A108" target="A110">
<data key="sourcecode">int tmp ;</data>
<data key="startline">757</data>
<data key="startoffset">15252</data>
</edge>
<node id="A112"/>
<edge source="A110" target="A112">
<data key="sourcecode">select_helpers();</data>
<data key="startline">761</data>
<data key="startoffset">15273</data>
<data key="enterFunction">select_helpers</data>
</edge>
<node id="A116"/>
<edge source="A112" target="A116">
<data key="sourcecode">return;</data>
<data key="startline">670</data>
<data key="startoffset">14257</data>
<data key="returnFrom">select_helpers</data>
</edge>
<node id="A120"/>
<edge source="A116" target="A120">
<data key="sourcecode">select_features();</data>
<data key="startline">762</data>
<data key="startoffset">15293</data>
<data key="enterFunction">select_features</data>
</edge>
<node id="A124"/>
<edge source="A120" target="A124">
<data key="sourcecode">return;</data>
<data key="startline">663</data>
<data key="startoffset">14208</data>
<data key="returnFrom">select_features</data>
</edge>
<node id="A128"/>
<edge source="A124" target="A128">
<data key="sourcecode">tmp = valid_product();</data>
<data key="startline">763</data>
<data key="startoffset">15314</data>
<data key="enterFunction">valid_product</data>
</edge>
<node id="A132"/>
<edge source="A128" target="A132">
<data key="sourcecode">int retValue_acc ;</data>
<data key="startline">674</data>
<data key="startoffset">14296</data>
</edge>
<node id="A134"/>
<edge source="A132" target="A134">
<data key="sourcecode">retValue_acc = 1;</data>
<data key="startline">677</data>
<data key="startoffset">14322</data>
<data key="assumption">retValue_acc == (1)</data>
<data key="assumption.scope">valid_product</data>
</edge>
<node id="A136"/>
<edge source="A134" target="A136">
<data key="sourcecode">return (retValue_acc);</data>
<data key="startline">678</data>
<data key="startoffset">14350</data>
<data key="returnFrom">valid_product</data>
</edge>
<node id="A140"/>
<edge source="A136" target="A140">
<data key="sourcecode">[(tmp == 0) == 0]</data>
<data key="startline">765</data>
<data key="startoffset">15347</data>
<data key="control">condition-true</data>
</edge>
<node id="A142"/>
<edge source="A140" target="A142">
<data key="sourcecode">setup();</data>
<data key="startline">767</data>
<data key="startoffset">15364</data>
<data key="enterFunction">setup</data>
</edge>
<node id="A146"/>
<edge source="A142" target="A146">
<data key="sourcecode">return;</data>
<data key="startline">742</data>
<data key="startoffset">15141</data>
<data key="returnFrom">setup</data>
</edge>
<node id="A150"/>
<edge source="A146" target="A150">
<data key="sourcecode">runTest();</data>
<data key="startline">768</data>
<data key="startoffset">15377</data>
<data key="enterFunction">runTest</data>
</edge>
<node id="A154"/>
<edge source="A150" target="A154">
<data key="sourcecode">test();</data>
<data key="startline">750</data>
<data key="startoffset">15187</data>
<data key="enterFunction">test</data>
</edge>
<node id="A158"/>
<edge source="A154" target="A158">
<data key="sourcecode">int splverifierCounter ;</data>
<data key="startline">581</data>
<data key="startoffset">13053</data>
</edge>
<node id="A160"/>
<edge source="A158" target="A160">
<data key="sourcecode">int tmp ;</data>
<data key="startline">582</data>
<data key="startoffset">13080</data>
</edge>
<node id="A162"/>
<edge source="A160" target="A162">
<data key="sourcecode">int tmp___0 ;</data>
<data key="startline">583</data>
<data key="startoffset">13092</data>
</edge>
<node id="A164"/>
<edge source="A162" target="A164">
<data key="sourcecode">int tmp___1 ;</data>
<data key="startline">584</data>
<data key="startoffset">13108</data>
</edge>
<node id="A166"/>
<edge source="A164" target="A166">
<data key="sourcecode">int tmp___2 ;</data>
<data key="startline">585</data>
<data key="startoffset">13124</data>
</edge>
<node id="A168"/>
<edge source="A166" target="A168">
<data key="sourcecode">splverifierCounter = 0;</data>
<data key="startline">588</data>
<data key="startoffset">13145</data>
<data key="assumption">splverifierCounter == (0)</data>
<data key="assumption.scope">test</data>
</edge>
<node id="A176"/>
<edge source="A168" target="A176">
<data key="sourcecode">[splverifierCounter &lt; 4]</data>
<data key="startline">592</data>
<data key="startoffset">13235</data>
<data key="control">condition-true</data>
</edge>
<node id="A180"/>
<edge source="A176" target="A180">
<data key="sourcecode">tmp = __VERIFIER_nondet_int();</data>
<data key="startline">598</data>
<data key="startoffset">13323</data>
</edge>
<node id="A183"/>
<edge source="A180" target="A183">
<data key="sourcecode">[(tmp == 0) == 0]</data>
<data key="startline">600</data>
<data key="startoffset">13362</data>
<data key="control">condition-true</data>
</edge>
<node id="sink">
<data key="sink">true</data>
</node>
<edge source="A180" target="sink">
<data key="sourcecode">[!((tmp == 0) == 0)]</data>
<data key="startline">600</data>
<data key="startoffset">13362</data>
<data key="control">condition-false</data>
</edge>
<node id="A188"/>
<edge source="A183" target="A188">
<data key="sourcecode">waterRise();</data>
<data key="startline">602</data>
<data key="startoffset">13383</data>
<data key="enterFunction">waterRise</data>
</edge>
<node id="A192"/>
<edge source="A188" target="A192">
<data key="sourcecode">[waterLevel &lt; 2]</data>
<data key="startline">824</data>
<data key="startoffset">16098</data>
<data key="control">condition-true</data>
</edge>
<node id="A194"/>
<edge source="A192" target="A194">
<data key="invariant">waterLevel == (1)</data>
<data key="invariant.scope">waterRise</data>
<data key="sourcecode">waterLevel = waterLevel + 1;</data>
<data key="startline">825</data>
<data key="startoffset">16146</data>
<data key="assumption">waterLevel == (2)</data>
<data key="assumption.scope">waterRise</data>
</edge>
<node id="A198"/>
<edge source="A194" target="A198">
<data key="sourcecode">return;</data>
<data key="startline">829</data>
<data key="startoffset">16167</data>
<data key="returnFrom">waterRise</data>
</edge>
<node id="A206"/>
<edge source="A198" target="A206">
<data key="sourcecode">tmp___0 = __VERIFIER_nondet_int();</data>
<data key="startline">608</data>
<data key="startoffset">13434</data>
</edge>
<node id="A213"/>
<edge source="A206" target="A213">
<data key="sourcecode">[(tmp___0 == 0) == 0]</data>
<data key="startline">610</data>
<data key="startoffset">13483</data>
<data key="control">condition-true</data>
</edge>
<edge source="A206" target="sink">
<data key="sourcecode">[!((tmp___0 == 0) == 0)]</data>
<data key="startline">610</data>
<data key="startoffset">13483</data>
<data key="control">condition-false</data>
</edge>
<node id="A234"/>
<edge source="A213" target="A234">
<data key="sourcecode">changeMethaneLevel();</data>
<data key="startline">612</data>
<data key="startoffset">13508</data>
<data key="enterFunction">changeMethaneLevel</data>
</edge>
<node id="A238"/>
<edge source="A234" target="A238">
<data key="sourcecode">[!((methaneLevelCritical == 0) == 0)]</data>
<data key="startline">836</data>
<data key="startoffset">16224</data>
<data key="control">condition-false</data>
</edge>
<node id="A240"/>
<edge source="A238" target="A240">
<data key="invariant">methaneLevelCritical == (0)</data>
<data key="invariant.scope">changeMethaneLevel</data>
<data key="sourcecode">methaneLevelCritical = 1;</data>
<data key="startline">839</data>
<data key="startoffset">16293</data>
<data key="assumption">methaneLevelCritical == (1)</data>
<data key="assumption.scope">changeMethaneLevel</data>
</edge>
<node id="A244"/>
<edge source="A240" target="A244">
<data key="sourcecode">return;</data>
<data key="startline">841</data>
<data key="startoffset">16325</data>
<data key="returnFrom">changeMethaneLevel</data>
</edge>
<node id="A258"/>
<edge source="A244" target="A258">
<data key="sourcecode">tmp___2 = __VERIFIER_nondet_int();</data>
<data key="startline">618</data>
<data key="startoffset">13568</data>
</edge>
<node id="A274"/>
<edge source="A258" target="A274">
<data key="sourcecode">[!((tmp___2 == 0) == 0)]</data>
<data key="startline">620</data>
<data key="startoffset">13617</data>
<data key="control">condition-false</data>
</edge>
<edge source="A258" target="sink">
<data key="sourcecode">[(tmp___2 == 0) == 0]</data>
<data key="startline">620</data>
<data key="startoffset">13617</data>
<data key="control">condition-true</data>
</edge>
<node id="A282"/>
<edge source="A274" target="A282">
<data key="sourcecode">tmp___1 = __VERIFIER_nondet_int();</data>
<data key="startline">624</data>
<data key="startoffset">13656</data>
</edge>
<node id="A298"/>
<edge source="A282" target="A298">
<data key="sourcecode">[!((tmp___1 == 0) == 0)]</data>
<data key="startline">626</data>
<data key="startoffset">13709</data>
<data key="control">condition-false</data>
</edge>
<edge source="A282" target="sink">
<data key="sourcecode">[(tmp___1 == 0) == 0]</data>
<data key="startline">626</data>
<data key="startoffset">13709</data>
<data key="control">condition-true</data>
</edge>
<node id="A660"/>
<edge source="A298" target="A660">
<data key="sourcecode">timeShift();</data>
<data key="startline">633</data>
<data key="startoffset">13761</data>
<data key="enterFunction">timeShift</data>
</edge>
<node id="A664"/>
<edge source="A660" target="A664">
<data key="sourcecode">[!((pumpRunning == 0) == 0)]</data>
<data key="startline">432</data>
<data key="startoffset">11244</data>
<data key="control">condition-false</data>
</edge>
<node id="A668"/>
<edge source="A664" target="A668">
<data key="sourcecode">[(systemActive == 0) == 0]</data>
<data key="startline">439</data>
<data key="startoffset">11316</data>
<data key="control">condition-true</data>
</edge>
<node id="A670"/>
<edge source="A668" target="A670">
<data key="sourcecode">processEnvironment();</data>
<data key="startline">441</data>
<data key="startoffset">11342</data>
<data key="enterFunction">processEnvironment</data>
</edge>
<node id="A674"/>
<edge source="A670" target="A674">
<data key="sourcecode">int tmp ;</data>
<data key="startline">461</data>
<data key="startoffset">11578</data>
</edge>
<node id="A676"/>
<edge source="A674" target="A676">
<data key="sourcecode">[pumpRunning == 0]</data>
<data key="startline">464</data>
<data key="startoffset">11601</data>
<data key="control">condition-true</data>
</edge>
<node id="A678"/>
<edge source="A676" target="A678">
<data key="sourcecode">tmp = isHighWaterLevel();</data>
<data key="startline">466</data>
<data key="startoffset">11626</data>
<data key="enterFunction">isHighWaterLevel</data>
</edge>
<node id="A682"/>
<edge source="A678" target="A682">
<data key="sourcecode">int retValue_acc ;</data>
<data key="startline">558</data>
<data key="startoffset">12690</data>
</edge>
<node id="A684"/>
<edge source="A682" target="A684">
<data key="sourcecode">int tmp ;</data>
<data key="startline">559</data>
<data key="startoffset">12711</data>
</edge>
<node id="A686"/>
<edge source="A684" target="A686">
<data key="sourcecode">int tmp___0 ;</data>
<data key="startline">560</data>
<data key="startoffset">12723</data>
</edge>
<node id="A688"/>
<edge source="A686" target="A688">
<data key="sourcecode">tmp = isHighWaterSensorDry();</data>
<data key="startline">564</data>
<data key="startoffset">12754</data>
<data key="enterFunction">isHighWaterSensorDry</data>
</edge>
<node id="A692"/>
<edge source="A688" target="A692">
<data key="sourcecode">int retValue_acc ;</data>
<data key="startline">886</data>
<data key="startoffset">16905</data>
</edge>
<node id="A694"/>
<edge source="A692" target="A694">
<data key="sourcecode">[!(waterLevel &lt; 2)]</data>
<data key="startline">889</data>
<data key="startoffset">16935</data>
<data key="control">condition-false</data>
</edge>
<node id="A696"/>
<edge source="A694" target="A696">
<data key="sourcecode">retValue_acc = 0;</data>
<data key="startline">893</data>
<data key="startoffset">17017</data>
<data key="assumption">retValue_acc == (0)</data>
<data key="assumption.scope">isHighWaterSensorDry</data>
</edge>
<node id="A698"/>
<edge source="A696" target="A698">
<data key="sourcecode">return (retValue_acc);</data>
<data key="startline">894</data>
<data key="startoffset">17047</data>
<data key="returnFrom">isHighWaterSensorDry</data>
</edge>
<node id="A702"/>
<edge source="A698" target="A702">
<data key="sourcecode">[!((tmp == 0) == 0)]</data>
<data key="startline">566</data>
<data key="startoffset">12788</data>
<data key="control">condition-false</data>
</edge>
<node id="A704"/>
<edge source="A702" target="A704">
<data key="sourcecode">tmp___0 = 1;</data>
<data key="startline">569</data>
<data key="startoffset">12837</data>
<data key="assumption">tmp___0 == (1)</data>
<data key="assumption.scope">isHighWaterLevel</data>
</edge>
<node id="A708"/>
<edge source="A704" target="A708">
<data key="sourcecode">retValue_acc = tmp___0;</data>
<data key="startline">571</data>
<data key="startoffset">12846</data>
<data key="assumption">retValue_acc == (1)</data>
<data key="assumption.scope">isHighWaterLevel</data>
</edge>
<node id="A710"/>
<edge source="A708" target="A710">
<data key="sourcecode">return (retValue_acc);</data>
<data key="startline">572</data>
<data key="startoffset">12880</data>
<data key="returnFrom">isHighWaterLevel</data>
</edge>
<node id="A714"/>
<edge source="A710" target="A714">
<data key="sourcecode">[(tmp == 0) == 0]</data>
<data key="startline">468</data>
<data key="startoffset">11666</data>
<data key="control">condition-true</data>
</edge>
<node id="A716"/>
<edge source="A714" target="A716">
<data key="sourcecode">activatePump();</data>
<data key="startline">470</data>
<data key="startoffset">11687</data>
<data key="enterFunction">activatePump</data>
</edge>
<node id="A720"/>
<edge source="A716" target="A720">
<data key="invariant">pumpRunning == (0)</data>
<data key="invariant.scope">activatePump</data>
<data key="sourcecode">pumpRunning = 1;</data>
<data key="startline">489</data>
<data key="startoffset">11906</data>
<data key="assumption">pumpRunning == (1)</data>
<data key="assumption.scope">activatePump</data>
</edge>
<node id="A722"/>
<edge source="A720" target="A722">
<data key="sourcecode">return;</data>
<data key="startline">490</data>
<data key="startoffset">11925</data>
<data key="returnFrom">activatePump</data>
</edge>
<node id="A730"/>
<edge source="A722" target="A730">
<data key="sourcecode">return;</data>
<data key="startline">482</data>
<data key="startoffset">11859</data>
<data key="returnFrom">processEnvironment</data>
</edge>
<node id="A736"/>
<edge source="A730" target="A736">
<data key="sourcecode">__utac_acc__Specification1_spec__1();</data>
<data key="startline">447</data>
<data key="startoffset">11392</data>
<data key="enterFunction">__utac_acc__Specification1_spec__1</data>
</edge>
<node id="A740"/>
<edge source="A736" target="A740">
<data key="sourcecode">int tmp ;</data>
<data key="startline">780</data>
<data key="startoffset">15578</data>
</edge>
<node id="A742"/>
<edge source="A740" target="A742">
<data key="sourcecode">int tmp___0 ;</data>
<data key="startline">781</data>
<data key="startoffset">15590</data>
</edge>
<node id="A744"/>
<edge source="A742" target="A744">
<data key="sourcecode">tmp = isMethaneLevelCritical();</data>
<data key="startline">785</data>
<data key="startoffset">15615</data>
<data key="enterFunction">isMethaneLevelCritical</data>
</edge>
<node id="A748"/>
<edge source="A744" target="A748">
<data key="sourcecode">int retValue_acc ;</data>
<data key="startline">845</data>
<data key="startoffset">16373</data>
</edge>
<node id="A750"/>
<edge source="A748" target="A750">
<data key="sourcecode">retValue_acc = methaneLevelCritical;</data>
<data key="startline">848</data>
<data key="startoffset">16399</data>
<data key="assumption">retValue_acc == (1)</data>
<data key="assumption.scope">isMethaneLevelCritical</data>
</edge>
<node id="A752"/>
<edge source="A750" target="A752">
<data key="sourcecode">return (retValue_acc);</data>
<data key="startline">849</data>
<data key="startoffset">16446</data>
<data key="returnFrom">isMethaneLevelCritical</data>
</edge>
<node id="A756"/>
<edge source="A752" target="A756">
<data key="sourcecode">[(tmp == 0) == 0]</data>
<data key="startline">787</data>
<data key="startoffset">15657</data>
<data key="control">condition-true</data>
</edge>
<node id="A758"/>
<edge source="A756" target="A758">
<data key="sourcecode">tmp___0 = isPumpRunning();</data>
<data key="startline">789</data>
<data key="startoffset">15684</data>
<data key="enterFunction">isPumpRunning</data>
</edge>
<node id="A762"/>
<edge source="A758" target="A762">
<data key="sourcecode">int retValue_acc ;</data>
<data key="startline">513</data>
<data key="startoffset">12189</data>
</edge>
<node id="A764"/>
<edge source="A762" target="A764">
<data key="sourcecode">retValue_acc = pumpRunning;</data>
<data key="startline">516</data>
<data key="startoffset">12215</data>
<data key="assumption">retValue_acc == (1)</data>
<data key="assumption.scope">isPumpRunning</data>
</edge>
<node id="A766"/>
<edge source="A764" target="A766">
<data key="sourcecode">return (retValue_acc);</data>
<data key="startline">517</data>
<data key="startoffset">12253</data>
<data key="returnFrom">isPumpRunning</data>
</edge>
<node id="A770"/>
<edge source="A766" target="A770">
<data key="sourcecode">[(tmp___0 == 0) == 0]</data>
<data key="startline">791</data>
<data key="startoffset">15715</data>
<data key="control">condition-true</data>
</edge>
<node id="A772"/>
<edge source="A770" target="A772">
<data key="sourcecode">__automaton_fail();</data>
<data key="startline">793</data>
<data key="startoffset">15740</data>
<data key="enterFunction">__automaton_fail</data>
</edge>
<node id="A778">
<data key="violation">true</data>
<data key="violatedProperty">__VERIFIER_error(); called in line 410</data>
</node>
<edge source="A772" target="A778">
<data key="sourcecode">__VERIFIER_error();</data>
<data key="startline">410</data>
<data key="startoffset">10756</data>
</edge>
</graph>
</graphml>
